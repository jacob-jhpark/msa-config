spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb:USER-SERVICE
          predicates:
            - Path=/user/**
          filters:
            - name: UserFilter
              args:
                baseMessage: Spring Cloud Gateway UserFilter
                preLogger: true
                postLogger: true
        - id: user-service
          uri: lb:USER-SERVICE
          predicates:
            - Path=/user/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user/(?<segment>.*),/$\{segment}
            - AuthorizationHeaderFilter
            - name: UserFilter
              args:
                baseMessage: Spring Cloud Gateway UserFilter
                preLogger: true
                postLogger: true
        - id: circuit-breaker-test
          uri: http://localhost:8082/
          predicates:
            - Path=/cafe/**
          filters:
            - name: CafeFilter
              args:
                baseMessage: Spring Cloud Gateway CafeFilter
                preLogger: true
                postLogger: true
        - id: jwt-service
          uri: http://localhost:8083/
          predicates:
            - Path=/jwt/**
          filters:
            - name: JwtRequestFilter
              args:
                baseMessage: Spring Cloud Gateway JwtFilter
                preLogger: true
                postLogger: true
eureka:
  instance:
    prefer-ip-address: true # 서비스 이름 대신 IP 주소 등록
  client:
    register-with-eureka: true # 유레카 서버에 서비스 등록
    fetch-registry: true # 레지스트리 정보를 로컬에 캐싱
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true