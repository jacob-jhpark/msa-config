spring:
  application:
    name: gateway-server

  sleuth:
    sampler:
      probability: 1.0

  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/login
            - Method=POST
          filters:
            - RewritePath=/user/(?<segment>.*),/$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/logout
            - Method=POST
          filters:
            - RewritePath=/user/(?<segment>.*),/$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/join
            - Method=POST
          filters:
            - RewritePath=/user/(?<segment>.*),/$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/**
          filters:
            - AuthorizationFilter
            - RewritePath=/user/(?<segment>.*),/$\{segment}
eureka:
  instance:
    prefer-ip-address: true # 서비스 이름 대신 IP 주소 등록
  client:
    register-with-eureka: true # 유레카 서버에 서비스 등록
    fetch-registry: true # 레지스트리 정보를 로컬에 캐싱
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka

token:
  access-expired-time: 3600000
  refresh-expired-time: 604800000
  secret: $2a$10$q42lY7Y18xqrFt1qbODZIO4OMTeOxnrCe7tF3n9bazJinVE7VH5Pi
  refresh-token-name: refresh-token
  access-token-name: access-token

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true